blueprint:
  description: "Control a color light with an EnOcean switch and long press to dim and change color"
  domain: "automation"
  name: "EnOceam Dimmer Switch - Color"
  input:
    light_target:
      name: Color light to control
      selector:
        entity:
          domain: light
    switch_entity_action:
      name: Switch
      description: This entity must end with _action
      selector:
        entity:
          domain: sensor
    input_boolean_longpress:
      name: LongpressToggle
      description: You need to create this helper toggle and select it here
      selector:
        entity:
          domain: input_boolean
    longpress_duration:
      name: Long press duration (ms)
      description: The amount of time to hold the button before long press is detected
      default: 250
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: "ms"
    dimming_step_delay:
      name: Dimming step delay (ms)
      description: Delay between each dimming step
      default: 250
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: "ms"
    dimming_step_size_pct:
      name: The dimming step size in percent
      default: 5
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"

variables:
  var_dimming_step_size_pct: !input dimming_step_size_pct
  pos_dimming_step_size_pct: "{{ var_dimming_step_size_pct | int }}"
  neg_dimming_step_size_pct: "{{ (var_dimming_step_size_pct | int) * -1 }}"

mode: restart
trigger:
  - platform: state
    entity_id: !input switch_entity_action
condition:
  - condition: template
    value_template: >-
      {{ trigger.to_state.state.startswith('press_') or
      trigger.to_state.state.startswith('release_') }}
action:
  - variables:
      command: "{{ trigger.to_state.state }}"
      light: !input light_target
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ command == 'release_1' or command == 'release_2' }}"
          - condition: state
            entity_id: !input input_boolean_longpress
            state: "off"
        sequence:
          - service: light.toggle
            data: {}
            target:
              entity_id: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ command == 'release_3' }}"
          - condition: state
            entity_id: !input input_boolean_longpress
            state: "off"
        sequence:
          - service: light.turn_on
            data:
              hs_color: '{{ [((state_attr(light,"hs_color")[0] or 0) + 15) % 360, 100] }}'
              transition: 0.25
            entity_id: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ command == 'release_4' }}"
          - condition: state
            entity_id: !input input_boolean_longpress
            state: "off"
        sequence:
          - service: light.turn_on
            data:
              hs_color: '{{ [((state_attr(light,"hs_color")[0] or 0) - 15) % 360, 100] }}'
              transition: 0.25
            entity_id: !input light_target
      - conditions:
          - condition: template
            value_template: >-
              {{ command == 'press_1' }}
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: !input longpress_duration
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - repeat:
              count: "{{ 100 / (var_dimming_step_size_pct | int) }}"
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: !input dimming_step_size_pct
                    transition: 0.2
                    entity_id: !input light_target
                - delay:
                    milliseconds: !input dimming_step_delay

      - conditions:
          - condition: template
            value_template: >-
              {{ command == 'press_3' }}
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: !input longpress_duration
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - repeat:
              count: 50
              sequence:
                - service: light.turn_on
                  data:
                    hs_color: '{{ [((state_attr(light,"hs_color")[0] or 0) + 15) % 360, 100] }}'
                    transition: 0.2
                  entity_id: !input light_target
                - delay:
                    milliseconds: !input dimming_step_delay

      - conditions:
          - condition: template
            value_template: >-
              {{ command == 'press_2' }}
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: !input longpress_duration
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - repeat:
              count: "{{ 100 / (var_dimming_step_size_pct | int) }}"
              sequence:
                - service: light.turn_on
                  data:
                    brightness_step_pct: "{{0 if ((state_attr(light,'brightness') | int) -  (255 / 100 * pos_dimming_step_size_pct)) <= 1 else neg_dimming_step_size_pct }}"
                    transition: 0.2
                    entity_id: !input light_target
                - delay:
                    milliseconds: !input dimming_step_delay

      - conditions:
          - condition: template
            value_template: >-
              {{ command == 'press_4' }}
        sequence:
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - delay:
              hours: 0
              minutes: 0
              seconds: 0
              milliseconds: !input longpress_duration
          - service: input_boolean.turn_on
            data: {}
            target:
              entity_id: !input input_boolean_longpress
          - repeat:
              count: 50
              sequence:
                - service: light.turn_on
                  data:
                    hs_color: '{{ [((state_attr(light,"hs_color")[0] or 0) - 15) % 360, 100] }}'
                    transition: 0.25
                  entity_id: !input light_target
                - delay:
                    milliseconds: !input dimming_step_delay
